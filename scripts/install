#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================
ynh_script_progression --message="Retrieve arguments from the manifest"

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
sql=$YNH_APP_ARG_SQL
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================
ynh_script_progression --message="Check if the app can be installed"

parent_dir=/var/www/webapp_$admin
directory="${domain//-/_}_$(echo $path_url | cut -d '/' -f 2)"
appname=webapp_$directory
final_path=$parent_dir/$directory
# For this app; $app is the label, as usual, but $appname will contains the real name of the app, from the path.
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Store settings from manifest" --weight=3

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app appname $appname
ynh_app_setting_set $app ftp_user $admin
ynh_app_setting_set $app final_path $final_path
ynh_app_setting_set $app parent_dir $parent_dir
ynh_app_setting_set $app sql $sql

ynh_app_setting_set $app admin_mail_html "1"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Setup SSOwat"

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_permission_update --permission "main" --add "visitors"
fi

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE FINAL PATH
#=================================================
ynh_script_progression --message="Create final path"

# Create parent directory for user's webapps
if test ! -d $parent_dir
then
	mkdir $parent_dir
	# Set permissions
	chmod 755 -R $parent_dir
	chown -R root: $parent_dir
else
	ynh_print_info "The directory $parent_dir already exist, do not recreate it." >&2
fi

# Copy files to the right place
mkdir -p $final_path
cp ../sources/index.html $final_path/
# Check if pure-ftpd is already installed
if test -f /usr/sbin/pure-ftpd-ldap
then
	# If so, check if net2ftp is installed as well.
	if test -d $parent_dir/netftp
	then
		# Change admin ID in configurations
		netftp_path=/ftp_webapp_$admin
		ynh_replace_string "__FTPUSER__" "$admin" ../sources/index_ftp.html
		ynh_replace_string "__HOST__" "$domain" ../sources/index_ftp.html
		ynh_replace_string "__NET2FTP__" "$netftp_path" ../sources/index_ftp.html
		ynh_replace_string "__PORT__" "$(cat /etc/pure-ftpd/conf/Bind)" ../sources/index_ftp.html
		# Replace index.html by the index with ftp information
		cp ../sources/index_ftp.html $final_path/index.html
	fi
fi

#=================================================
# CREATE A MYSQL DATABASE
#=================================================

if [ $sql -eq 1 ]
then
	ynh_script_progression --message="Create a mysql database"
	db_name=$(ynh_sanitize_dbid $appname)
	ynh_app_setting_set $app db_name $db_name
	ynh_mysql_setup_db $db_name $db_name
	echo "DB_NAME= $db_name" | tee "$final_path/db_info.txt"
	echo "DB_USER= $db_name" | tee -a "$final_path/db_info.txt"
	echo "DB_PASSWORD= $db_pwd" | tee -a "$final_path/db_info.txt"
	echo "DB_HOST= localhost" | tee -a "$final_path/db_info.txt"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Create a dedicated user" --weight=3

# Create a dedicated system user
ynh_system_user_create $appname

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configure php-fpm"

# Because we're using $appname, we can't use ynh_fpm_config
finalphpconf="/etc/php/7.0/fpm/pool.d/$appname.conf"

cp ../conf/php-fpm.conf "$finalphpconf"

ynh_replace_string "__NAMETOCHANGE__" "$appname" "$finalphpconf"
ynh_replace_string "__FINALPATH__" "$final_path" "$finalphpconf"
ynh_replace_string "__USER__" "$appname" "$finalphpconf"

chown root: "$finalphpconf"

ynh_systemd_action --action=reload --service_name=php5-fpm

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configure nginx"

# Because we're using $appname, we can't use ynh_nginx_config

finalnginxconf="/etc/nginx/conf.d/$domain.d/$appname.conf"
cp ../conf/nginx.conf "$finalnginxconf"

if [ "$path_url" != "/" ]
then
	ynh_replace_string "^#sub_path_only" "" "$finalnginxconf"
fi
ynh_replace_string "__PATH__/" "${path_url%/}/" "$finalnginxconf"
ynh_replace_string "__PATH__" "$path_url" "$finalnginxconf"
ynh_replace_string "__FINALPATH__" "$final_path" "$finalnginxconf"
ynh_replace_string "__APPNAME__" "$appname" "$finalnginxconf"

#=================================================
# GENERIC FINALISATION
#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chmod 775 -R $final_path
chown -R $admin:$appname $final_path

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reload nginx" --weight=5

ynh_systemd_action --action=reload --service_name=nginx

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

# Get main domain and buid the url of the admin panel of the app.
admin_panel="https://$(grep portal_domain /etc/ssowat/conf.json | cut -d'"' -f4)/yunohost/admin/#/apps/$app"

if [ "$sql" != "0" ]
then
	sql_infos="
You ask for a database, please find here the information about this SQL database.
$(cat "$final_path/db_info.txt")
"
else
	sql_infos=""
fi

echo "This app is simply a blank web app container. You have to put your own app inside.
$sql_infos
Please put your files in this directory, $final_path

You can find a standard nginx configuration in $finalnginxconf and a standard php config in $finalphpconf.

You can configure this app easily by using the experimental __URL_TAG1__config-panel feature__URL_TAG2__$admin_panel/config-panel__URL_TAG3__.
You can also find some specific actions for this app by using the experimental __URL_TAG1__action feature__URL_TAG2__$admin_panel/actions__URL_TAG3__.

If you're facing an issue or want to improve this app, please open a new issue in this __URL_TAG1__project__URL_TAG2__https://github.com/YunoHost-Apps/multi_webapp_ynh__URL_TAG3__." > mail_to_send

ynh_send_readme_to_admin --app_message="mail_to_send" --recipients="$admin" --type="install"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation completed" --last
